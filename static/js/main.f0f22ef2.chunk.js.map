{"version":3,"sources":["ContactFrom/ContactForm.styles.jsx","ContactFrom/ContactForm.jsx","Contacts/Contacts.styles.jsx","Contacts/Contacts.jsx","Container/Container.styles.jsx","Container/Container.jsx","Filter/Filter.styles.jsx","Filter/Filter.jsx","App.jsx","index.js"],"names":["Title2","styled","h2","Input","input","Button","button","ContactFrom","state","name","number","nameInputId","uuidv4","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","initialValues","errors","touched","handleBlur","htmlFor","type","placeholder","onChange","onBlur","id","pattern","title","required","disabled","Component","Contact","ul","ContactItem","li","BtnDelete","Text","p","ContactList","contacts","onDeleteContact","map","onClick","Containers","div","Title","h1","Container","children","Filter","App","filter","formSubmitHandle","entry","some","contact","alert","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","visibleContacts","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0f22ef2.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\n\r\nexport const Title2 = styled.h2`\r\nfont-size: 17px;\r\nfont-weight: 500;\r\nmargin: 0;\r\njustify-content:center;\r\npadding-bottom: 10px;\r\n`\r\n\r\nexport const Input = styled.input`\r\nmin-width:350px;\r\ndisplay: flex;\r\npadding:5px;\r\nmargin-bottom: 20px;\r\ncursor: pointer;\r\nborder:  solid 1.5px #6b6a6a4c;\r\nborder-radius:5px;\r\n\r\n&:hover{\r\n    border:  solid 1.5px #09c3e4;\r\n    box-shadow: 0 0 20px rgba(20, 247, 247, 0.5);\r\n}`\r\n\r\nexport const Button = styled.button`\r\npadding: 5px;\r\nborder:  solid 1.5px #6b6a6a4c;\r\nborder-radius:5px;\r\n\r\n&:hover{\r\n    color: #09c3e4;\r\n    border:  solid 1.5px #09c3e4;\r\n    box-shadow: 0 0 20px rgba(20, 247, 247, 0.5); \r\n}\r\n`","import { Formik } from 'formik';\r\nimport { Component } from 'react';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {Input, Title2, Button} from './ContactForm.styles'\r\nimport {BiPhoneCall,BiUser, BiAddToQueue} from 'react-icons/bi'\r\n\r\nclass ContactFrom extends Component {\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  }\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n \r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n     const { name, number } = this.state;\r\n    return (\r\n      <>    \r\n          <Formik\r\n            initialValues={{ name: '', number: '' }}\r\n          >\r\n            {({\r\n              errors,\r\n              touched,\r\n              handleBlur\r\n            }) => (\r\n              <form onSubmit={this.handleSubmit}>\r\n           \r\n                <Title2 htmlFor={this.nameInputId}><BiUser /> Name</Title2>\r\n\r\n                <Input\r\n                  type=\"text\"\r\n                name=\"name\"\r\n                 placeholder=\"Enter your name\"\r\n                  onChange={this.handleChange}\r\n                onBlur={handleBlur}\r\n                value={name}\r\n                id={this.nameInputId}\r\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. \r\n             Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                  required\r\n                />\r\n                {errors.name && touched.name && errors.name}\r\n          \r\n                <Title2 htmlFor={this.numberInputId}><BiPhoneCall /> Number </Title2>\r\n\r\n                <Input\r\n                  type=\"text\"\r\n                name=\"number\"\r\n                 placeholder=\"Enter your number\"\r\n                  onChange={this.handleChange}\r\n                  onBlur={handleBlur}\r\n                value={number}\r\n                id={this.numberInputId}\r\n                  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                  title=\"Номер телефона должен состоять из цифр и может содержать пробелы,\r\n             тире, круглые скобки и может начинаться с +\"\r\n                  required\r\n                />\r\n                {errors.number && touched.number && errors.number}\r\n\r\n              <Button type=\"submit\"  disabled={!name || !number}>\r\n                  <BiAddToQueue />\r\n                  Add contact\r\n                </Button>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n      </>\r\n    )\r\n  }\r\n}\r\n \r\nexport default ContactFrom","import styled from '@emotion/styled'\r\n\r\nexport const Contact = styled.ul`\r\nwidth: 350px;\r\npadding: 0;\r\n`\r\n\r\nexport const ContactItem = styled.li`\r\ndisplay: flex;\r\ntext-align:center;\r\nalign-items:center;\r\njustify-content: space-between;\r\n`\r\n\r\nexport const BtnDelete = styled.button`\r\nwidth: 40px;\r\nheight: 40px;\r\nborder: solid 1.5px #6b6a6a4c;\r\nborder-radius: 50%;\r\npadding: 3px;\r\n\r\n&:hover{\r\n    color: #09c3e4;\r\n    border:  solid 1.5px #09c3e4;\r\n    box-shadow: 0 0 20px rgba(20, 247, 247, 0.5);}\r\n\r\n`\r\n\r\nexport const Text = styled.p`\r\nfont-size: 17px;\r\nfont-weight:400;\r\n`\r\n","import PropTypes from \"prop-types\";\r\nimport { Contact, ContactItem, BtnDelete, Text } from './Contacts.styles';\r\nimport {RiDeleteBin5Line, RiUserHeartLine} from 'react-icons/ri';\r\n\r\nconst ContactList = ({contacts, onDeleteContact}) => {\r\n    return (\r\n      <>\r\n        <Contact>\r\n          {contacts.map(({id,name,number}) => (\r\n            <>\r\n            <ContactItem key={id}><RiUserHeartLine/>\r\n            <Text>{name}: {number}</Text>\r\n            <BtnDelete onClick = {() => onDeleteContact(id)}><RiDeleteBin5Line/></BtnDelete>\r\n            </ContactItem>\r\n            \r\n            </>\r\n          ))}\r\n        </Contact>\r\n      </>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default ContactList;","import styled from '@emotion/styled'\r\n\r\nexport const Containers = styled.div`\r\n  max-width: 500px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 40px 40px;\r\n  background-color: #eff7f895;\r\n  border-radius: 5px;\r\n\r\n  &:hover{\r\n      box-shadow: 0px 0px 5px  rgba(20, 247, 247, 0.5);\r\n  }\r\n`\r\n\r\nexport const Title = styled.h1`\r\n  text-align: center;\r\n  color: #000;\r\n  font-weight: bold;\r\n  font-size: 42px;\r\n`","import PropTypes from \"prop-types\";\r\nimport { Containers, Title } from \"./Container.styles\";\r\nimport {BiBookOpen} from 'react-icons/bi';\r\n\r\nconst Container = ({ title, children }) => (\r\n  <Containers>\r\n    <Title> <BiBookOpen/> {title}</Title>\r\n    {children}\r\n  </Containers>\r\n);\r\n\r\nContainer.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Container;","import styled from '@emotion/styled'\r\n\r\nexport const Text = styled.p`\r\nfont-size:20px;\r\n`","import PropTypes from \"prop-types\";\r\nimport { Input } from '../ContactFrom/ContactForm.styles';\r\nimport { Text } from './Filter.styles';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n    return(\r\n        <>\r\n        <Text>Find contacts by name</Text>\r\n            <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Name to search\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                value={value}\r\n                onChange={onChange}\r\n                required>  \r\n            </Input>\r\n        </>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport contacts from './data/contacts.json';\r\nimport ContactFrom from './ContactFrom';\r\nimport ContactList from './Contacts';\r\nimport Container from './Container';\r\nimport Filter from './Filter';\r\nimport {RiContactsLine} from 'react-icons/ri';\r\n\r\nclass App extends React.Component{\r\n    state = {\r\n      contacts: contacts ,\r\n        filter: '',\r\n  }\r\n  \r\n   formSubmitHandle = ({ name, number }) => {\r\n    const { contacts } = this.state;\r\n    const entry = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n    if (contacts.some((contact) => contact.name === name)) {\r\n      alert(`${name} is already in contacts.`);\r\n      return;\r\n    }\r\n\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      contacts: [entry, ...prevState.contacts],\r\n    }));\r\n  };\r\n\r\n    changeFilter = (e) => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n      deleteContact = (contactId) => {\r\n        this.setState( prevState => ({\r\n          contacts: prevState.contacts.filter(contact => contact.id !== contactId)}\r\n        ))\r\n  }\r\n\r\n    render(){\r\n      const { filter } = this.state;\r\n        const visibleContacts = this.getVisibleContacts();\r\n        return(\r\n          <>\r\n            <Container title=\"Phonebook\">\r\n            <ContactFrom onSubmit={this.formSubmitHandle} ></ContactFrom>\r\n            <h2> <RiContactsLine/> Contacts</h2>\r\n            <Filter value={filter} onChange={this.changeFilter} ></Filter>\r\n            <ContactList\r\n              contacts={visibleContacts}\r\n              onDeleteContact={this.deleteContact}\r\n              ></ContactList>\r\n              </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}